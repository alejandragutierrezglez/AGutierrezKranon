//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AGutierrezKranonEntities : DbContext
    {
        public AGutierrezKranonEntities()
            : base("name=AGutierrezKranonEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Libro> Libroes { get; set; }
    
        public virtual int LibroAdd(string autor, string titulo, Nullable<System.DateTime> fechaPublicacion, string editorial)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var fechaPublicacionParameter = fechaPublicacion.HasValue ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(System.DateTime));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroAdd", autorParameter, tituloParameter, fechaPublicacionParameter, editorialParameter);
        }
    
        public virtual int LibroDeleteByAutor(string autor)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroDeleteByAutor", autorParameter);
        }
    
        public virtual int LibroDeleteByEditorial(string editorial)
        {
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LibroDeleteByEditorial", editorialParameter);
        }
    
        public virtual ObjectResult<LibroGetByAutor_Result> LibroGetByAutor(string autor)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetByAutor_Result>("LibroGetByAutor", autorParameter);
        }
    
        public virtual ObjectResult<LibroGetByAutorANDFechaPublicacion_Result> LibroGetByAutorANDFechaPublicacion(string autor, Nullable<System.DateTime> fechaPublicacion)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            var fechaPublicacionParameter = fechaPublicacion.HasValue ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetByAutorANDFechaPublicacion_Result>("LibroGetByAutorANDFechaPublicacion", autorParameter, fechaPublicacionParameter);
        }
    
        public virtual ObjectResult<LibroGetByEditorial_Result> LibroGetByEditorial(string editorial)
        {
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetByEditorial_Result>("LibroGetByEditorial", editorialParameter);
        }
    
        public virtual ObjectResult<LibroGetByFechaPublicacion_Result> LibroGetByFechaPublicacion(Nullable<System.DateTime> fechaPublicacion)
        {
            var fechaPublicacionParameter = fechaPublicacion.HasValue ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetByFechaPublicacion_Result>("LibroGetByFechaPublicacion", fechaPublicacionParameter);
        }
    
        public virtual ObjectResult<LibroGetByTitulo_Result> LibroGetByTitulo(string titulo)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetByTitulo_Result>("LibroGetByTitulo", tituloParameter);
        }
    
        public virtual ObjectResult<LibroGetById_Result> LibroGetById(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetById_Result>("LibroGetById", idLibroParameter);
        }
    
        public virtual ObjectResult<LibroGetAll_Result> LibroGetAll(string autor, string titulo, string fechaPublicacion, string editorial)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var fechaPublicacionParameter = fechaPublicacion != null ?
                new ObjectParameter("FechaPublicacion", fechaPublicacion) :
                new ObjectParameter("FechaPublicacion", typeof(string));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LibroGetAll_Result>("LibroGetAll", autorParameter, tituloParameter, fechaPublicacionParameter, editorialParameter);
        }
    }
}
